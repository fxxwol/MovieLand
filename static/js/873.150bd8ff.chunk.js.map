{"version":3,"file":"static/js/873.150bd8ff.chunk.js","mappings":"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","sources":["styles/SearchBar.styled.jsx","components/SearchBar.jsx","pages/Movies.jsx","service/movieAPI.js","styles/Common.styled.jsx","styles/Home.styled.jsx","styles/Movies.styled.jsx"],"sourcesContent":["import { OutlinedInput } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const SearchInput = styled(OutlinedInput)`\n  width: 90%;\n  height: 100%;\n  &.MuiOutlinedInput-root {\n    border-color: #000;\n    border-width: 2px;\n    transition: border-color 0.3s;\n  }\n\n  &&:hover .MuiOutlinedInput-notchedOutline {\n    border-color: #02c342;\n  }\n\n  &&.Mui-focused .MuiOutlinedInput-notchedOutline {\n    border-color: #02c342;\n    border-width: 1px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, Button } from '@mui/material';\nimport { SearchInput } from 'styles/SearchBar.styled';\n\nexport default function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        sx={{\n          width: '50%',\n          display: 'flex',\n          margin: '0 auto',\n          height: '40px',\n          flexDirection: 'row',\n          gap: '10px',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <SearchInput\n          placeholder=\"Please enter movie name\"\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          color=\"primary\"\n          onChange={handleInput}\n        />\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"medium\">\n          Search\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport SearchBar from 'components/SearchBar';\nimport { searchByName } from 'service/movieAPI';\nimport {\n  Link,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport { Wrap } from 'styles/Movies.styled';\nimport { BASE_IMG_URL } from 'service/movieAPI';\nimport { ImageItem, MovieItem } from 'styles/Home.styled';\nimport {\n  ImageListItemBar,\n  ImageListItem,\n  Stack,\n  Pagination,\n} from '@mui/material';\nimport { Section } from 'styles/Common.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const [totalPages, setTotalPages] = useState(1);\n  const query = searchParams.get('query') ?? '';\n  const page = searchParams.get('page') ?? 1;\n  const location = useLocation();\n\n  const handleSearch = searchQuery => {\n    if (!searchQuery.trim()) {\n      toast.error('Enter a query to search!');\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: searchQuery, page: 1 });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      setStatus('');\n      return;\n    }\n    async function getByName() {\n      try {\n        const data = await searchByName(query, page);\n        if (!data.total_results) {\n          throw new Error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    }\n    getByName();\n    setStatus('pending');\n    setError(null);\n  }, [query, page]);\n\n  const handlePagination = (_, page) => {\n    setSearchParams({query, page});\n  };\n\n  return (\n    <Section>\n      <SearchBar onSubmit={handleSearch} />\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <Wrap>\n            {movies.map(({ id, title, poster_path }) => (\n              <MovieItem\n                component={Link}\n                to={`${id}`}\n                state={{ from: location }}\n                key={id}\n                sx={{ padding: '0' }}\n              >\n                <ImageListItem\n                  sx={{\n                    width: '100%',\n                    position: 'unset',\n                  }}\n                >\n                  <ImageItem\n                    src={`${\n                      poster_path\n                        ? BASE_IMG_URL + poster_path\n                        : require('../img/default-poster.jpg')\n                    }`}\n                    alt={title}\n                    loading=\"lazy\"\n                  />\n                  <ImageListItemBar\n                    title={title}\n                    sx={{\n                      textAlign: 'center',\n                      background: 'rgba(0, 0, 0, 0.7)',\n                    }}\n                  />\n                </ImageListItem>\n              </MovieItem>\n            ))}\n          </Wrap>\n          <Stack spacing={2} alignItems=\"center\">\n            <Pagination\n              count={totalPages}\n              shape=\"rounded\"\n              showFirstButton\n              showLastButton\n              page={+page}\n              size=\"large\"\n              color=\"opacity\"\n              onChange={handlePagination}\n            />\n          </Stack>\n        </>\n      )}\n      {status === 'rejected' && <h1>{error.message}</h1>}\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '', page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query,\n                page\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getVideo(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n    padding: 30px 0;\n`","import { ListItemButton } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const H1 = styled.h1`\n  font-weight: 400;\n  font-size: 60px;\n  margin-bottom: 30px;\n`;\n\nexport const MovieItem = styled(ListItemButton)`\n  width: calc((100% - 24px) / 4);\n\n  &.css-bn1567-MuiButtonBase-root-MuiListItemButton-root {\n    flex-grow: unset;\n    -webkit-flex-grow: unset;\n    transition: all 250ms ease-in-out 0ms;\n  }\n\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  display: block;\n  object-fit: cover;\n  flex-shrink: 0;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    margin: 30px 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    justify-content: center;\n    align-content: center;\n    height: fit-content;\n`\n"],"names":["SearchInput","styled","OutlinedInput","SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","FormControl","sx","width","display","margin","height","flexDirection","gap","justifyContent","alignItems","placeholder","type","name","value","autoComplete","autoFocus","color","onChange","target","toLowerCase","Button","variant","size","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","status","setStatus","totalPages","setTotalPages","get","page","location","useLocation","useEffect","searchByName","data","total_results","Error","results","total_pages","getByName","searchQuery","trim","toast","Loader","map","id","title","poster_path","component","Link","to","state","from","padding","ImageListItem","position","src","BASE_IMG_URL","require","alt","loading","ImageListItemBar","textAlign","background","Stack","spacing","Pagination","count","shape","showFirstButton","showLastButton","_","message","API_KEY","BASE_URL","getTrending","axios","params","api_key","response","console","log","getMovieDetails","getCredits","getReviews","getVideo","Section","H1","MovieItem","ListItemButton","ImageItem","Wrap"],"sourceRoot":""}