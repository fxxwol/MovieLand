{"version":3,"file":"static/js/309.62aa4c97.chunk.js","mappings":"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","sources":["components/Additional.jsx","pages/MovieDetails.jsx","service/movieAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst Additional = props => {\n  return (\n    <>\n      <h3>Additional info</h3>\n      <ul>\n        <li>\n          <Link to={`cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`reviews`}>Reviews</Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Additional;\n","import { Loader } from 'components/Loader';\nimport { useEffect, useState, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Additional from 'components/Additional';\nimport { BASE_IMG_URL, getMovieDetails } from 'service/movieAPI';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n    const [status, setStatus] = useState('');\n    const location = useLocation()\n    const backLink = useRef(location.state?.from ?? '/movies')\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const { genres, overview, poster_path, title, vote_average } =\n          await getMovieDetails(movieId);\n        setMovie({ genres, overview, poster_path, title, vote_average });\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    getDetails();\n    setStatus('pending');\n  }, [movieId]);\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <Link to={backLink.current}>Go back</Link>\n        <div>\n          <img\n            src={BASE_IMG_URL + movie.poster_path}\n            alt={movie.title}\n            width={450}\n          />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>User score: {Math.ceil(movie.vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            {movie.genres.map(({ id, name }) => {\n              return <p key={id}>{name}</p>;\n            })}\n          </div>\n        </div>\n        <Additional />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  }\n  if (status === 'rejected') {\n    return <h1>Sorry, we don't have this movie</h1>;\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '') {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}"],"names":["props","to","movieId","useParams","useState","movie","setMovie","status","setStatus","location","useLocation","backLink","useRef","state","from","useEffect","getMovieDetails","genres","overview","poster_path","title","vote_average","console","log","getDetails","Loader","current","src","BASE_IMG_URL","alt","width","Math","ceil","map","id","name","Suspense","fallback","API_KEY","BASE_URL","getTrending","axios","params","api_key","response","data","error","searchByName","query","getCredits","getReviews"],"sourceRoot":""}