{"version":3,"file":"static/js/597.d2a9ec47.chunk.js","mappings":"yNA2CA,UAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAWH,GAFlC,WAEUI,EAFV,QAGcR,KAAKS,OAHnB,sBAIY,IAAIC,MAAM,0CAJtB,OAMIT,EAAQO,EAAKR,MANjB,gDAQMG,EAAS,EAAD,IARd,0DADc,uBAAC,WAAD,wBAYdQ,EACD,GAAE,CAACP,KAEF,gCACGF,IAAS,uBAAIA,EAAMU,WACpB,wBACGZ,EAAKa,KAAI,SAAAC,GAAM,OACd,2BACE,gBACEC,IAAKC,EAAAA,GAAeF,EAAOG,aAC3BC,IAAKJ,EAAOK,KACZC,MAAO,OAET,uBAAIN,EAAOK,QACX,yBAAG,cAAYL,EAAOO,eAPfP,EAAOQ,GADF,QAcvB,C,uNCxCKC,EAAU,mCACVC,EAAW,+BACJR,EAAe,uCAErB,SAAeS,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CAC/DG,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJrB,cAEOM,EAFP,yBAOQA,EAASrB,MAPjB,gCASCsB,QAAQ5B,MAAR,MATD,gFAaA,SAAe6B,IAAtB,4CAAO,OAAP,oBAAO,yGAA4BC,EAA5B,+BAAoC,GAApC,kBAEwBN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAsC,CACzDG,OAAQ,CACJC,QAAQ,GAAD,OAAKL,GACZS,MAAAA,KALT,cAEOH,EAFP,yBAQQA,EAASrB,MARjB,gCAUCsB,QAAQG,IAAR,MAVD,iFAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,gGAEwBI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,GAAM,CACxDK,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJrB,cAEOM,EAFP,yBAOQA,EAASrB,MAPjB,gCASCsB,QAAQG,IAAR,MATD,gFAaA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA0Be,GAA1B,gGAEwBI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAChEK,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJrB,cAEOM,EAFP,yBAOQA,EAASrB,MAPjB,gCASCsB,QAAQG,IAAR,MATD,gFAaA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bb,GAA1B,gGAEwBI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAChEK,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJrB,cAEOM,EAFP,yBAOQA,EAASrB,MAPjB,gCASCsB,QAAQG,IAAR,MATD,gF","sources":["components/Cast.jsx","service/movieAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits, BASE_IMG_URL } from 'service/movieAPI';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const data = await getCredits(movieId);\n        if (!data.cast.length) {\n          throw new Error(\"We don't have cast list for this movie\");\n        }\n        setCast(data.cast);\n      } catch (error) {\n          setError(error)\n      }\n    }\n    getCast();\n  }, [movieId]);\n  return (\n    <>\n      {error && <p>{error.message}</p>}\n      <ul>\n        {cast.map(person => (\n          <li key={person.id}>\n            <img\n              src={BASE_IMG_URL + person.profile_path}\n              alt={person.name}\n              width={300}\n            />\n            <p>{person.name}</p>\n            <p>Character: {person.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '') {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}"],"names":["useState","cast","setCast","error","setError","movieId","useParams","useEffect","getCredits","data","length","Error","getCast","message","map","person","src","BASE_IMG_URL","profile_path","alt","name","width","character","id","API_KEY","BASE_URL","getTrending","axios","params","api_key","response","console","searchByName","query","log","getMovieDetails","getReviews"],"sourceRoot":""}