{"version":3,"file":"static/js/681.5e730137.chunk.js","mappings":"yNAwCA,UApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAkBP,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,IAAWH,GAFpC,WAEYI,EAFZ,QAGgBC,cAHhB,sBAIc,IAAIC,MAAM,4CAJxB,OAMIT,EAAWO,EAAKG,SANpB,gDAQMR,EAAS,EAAD,IARd,0DADc,uBAAC,WAAD,wBAYdS,EACD,GAAE,CAACR,KAGA,gCACKF,IAAS,uBAAKA,EAAMW,WACzB,wBACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C,uNCrCKC,EAAU,mCACVC,EAAW,+BACJC,EAAe,uCAErB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAA4C,CAC/DI,OAAQ,CACJC,QAAQ,GAAD,OAAKN,MAJrB,cAEOO,EAFP,yBAOQA,EAASlB,MAPjB,gCASCmB,QAAQzB,MAAR,MATD,gFAaA,SAAe0B,IAAtB,4CAAO,OAAP,oBAAO,yGAA4BC,EAA5B,+BAAoC,GAApC,kBAEwBN,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CACzDI,OAAQ,CACJC,QAAQ,GAAD,OAAKN,GACZU,MAAAA,KALT,cAEOH,EAFP,yBAQQA,EAASlB,MARjB,gCAUCmB,QAAQG,IAAR,MAVD,iFAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,gGAEwBK,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BF,GAAM,CACxDM,OAAQ,CACJC,QAAQ,GAAD,OAAKN,MAJrB,cAEOO,EAFP,yBAOQA,EAASlB,MAPjB,gCASCmB,QAAQG,IAAR,MATD,gFAaA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bd,GAA1B,gGAEwBK,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BF,EAA/B,YAA6C,CAChEM,OAAQ,CACJC,QAAQ,GAAD,OAAKN,MAJrB,cAEOO,EAFP,yBAOQA,EAASlB,MAPjB,gCASCmB,QAAQG,IAAR,MATD,gFAaA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BW,GAA1B,gGAEwBK,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BF,EAA/B,YAA6C,CAChEM,OAAQ,CACJC,QAAQ,GAAD,OAAKN,MAJrB,cAEOO,EAFP,yBAOQA,EAASlB,MAPjB,gCASCmB,QAAQG,IAAR,MATD,gF","sources":["components/Reviews.jsx","service/movieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'service/movieAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const {movieId} = useParams();\n  \n\n  useEffect(() => {\n    async function getAllReviews() {\n      try {\n          const data = await getReviews(movieId);\n          if (!data.total_results) {\n            throw new Error(\"We don't have any reviews for this movie\");\n          }\n        setReviews(data.results);\n      } catch (error) {\n          setError(error)\n      }\n    }\n    getAllReviews();\n  }, [movieId]);\n\n  return (\n      <>\n          {error && <p>{ error.message}</p>}\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>Author: {review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '') {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviews","data","total_results","Error","results","getAllReviews","message","map","review","author","content","id","API_KEY","BASE_URL","BASE_IMG_URL","getTrending","axios","params","api_key","response","console","searchByName","query","log","getMovieDetails","getCredits"],"sourceRoot":""}