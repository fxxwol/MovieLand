{"version":3,"file":"static/js/884.68ca58e6.chunk.js","mappings":"0OA2DA,UArDqB,WAAO,IAAD,IAEjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACE,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAmBlD,OAlBEC,QAAQC,IAAIP,GACZM,QAAQC,IAAIL,IAEdM,EAAAA,EAAAA,YAAU,WAAM,wCACd,wHAGYC,EAAAA,EAAAA,IAAgBhB,GAH5B,gBAEYiB,EAFZ,EAEYA,OAAQC,EAFpB,EAEoBA,SAAUC,EAF9B,EAE8BA,YAAaC,EAF3C,EAE2CA,MAAOC,EAFlD,EAEkDA,aAE9CjB,EAAS,CAAEa,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,EAAaC,MAAAA,EAAOC,aAAAA,IACjDf,EAAU,YALd,kDAOIO,QAAQC,IAAR,MACAR,EAAU,YARd,2DADc,uBAAC,WAAD,wBAYdgB,GACAhB,EAAU,UACX,GAAE,CAACN,IACW,YAAXK,GACK,SAAC,IAAD,IAEM,aAAXA,GAEA,iCACE,SAAC,KAAD,CAAMkB,GAAId,EAASe,QAAnB,SAA6B,aAC7B,4BACE,gBAAKC,IAhCQ,uCAgCYtB,EAAMgB,YAAaO,IAAKvB,EAAMiB,MAAOO,MAAO,OACrE,4BACE,wBAAKxB,EAAMiB,SACX,yBAAG,eAAaQ,KAAKC,KAA0B,GAArB1B,EAAMkB,cAAmB,QACnD,wBAAI,cACJ,uBAAIlB,EAAMe,YACV,wBAAI,WACHf,EAAMc,OAAOa,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,uBAAaA,GAALD,EAChB,aAMI,aAAX1B,GACK,wBAAI,yCADb,CAGD,C,+ICxDK4B,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CAC/DG,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJrB,cAEOM,EAFP,yBAOQA,EAASC,MAPjB,gCASC3B,QAAQ4B,MAAR,MATD,gFAaA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA4BC,EAA5B,+BAAoC,GAApC,kBAEwBP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAsC,CACzDG,OAAQ,CACJC,QAAQ,GAAD,OAAKL,GACZU,MAAAA,KALT,cAEOJ,EAFP,yBAQQA,EAASC,MARjB,gCAUC3B,QAAQC,IAAR,MAVD,iFAcA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+Be,GAA/B,gGAEoBK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,GAAM,CACxDM,OAAQ,CACJC,QAAQ,GAAD,OAAKL,MAJjB,cAEGM,EAFH,yBAOIA,EAASC,MAPb,gCASH3B,QAAQC,IAAR,MATG,gF","sources":["pages/MovieDetails.jsx","service/movieAPI.js"],"sourcesContent":["import { Loader } from 'components/Loader';\nimport { useEffect, useState, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'service/movieAPI';\nimport { Link } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n    const [status, setStatus] = useState('');\n    const location = useLocation()\n    const backLink = useRef(location.state?.from ?? '/movies')\n    console.log(location)\n    console.log(backLink)\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const { genres, overview, poster_path, title, vote_average } =\n          await getMovieDetails(movieId);\n        setMovie({ genres, overview, poster_path, title, vote_average });\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    getDetails();\n    setStatus('pending');\n  }, [movieId]);\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return (\n      <>\n        <Link to={backLink.current} >Go back</Link>\n        <div>\n          <img src={BASE_IMG_URL + movie.poster_path} alt={movie.title} width={450} />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>User score: {Math.ceil(movie.vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            {movie.genres.map(({ id, name }) => {\n              return <p key={id}>{name}</p>;\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n  if (status === 'rejected') {\n    return <h1>Sorry, we don't have this movie</h1>;\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\n\nexport async function getTrending() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '') {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id){ \ntry {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n        params: {\n            api_key: `${API_KEY}`,\n        }\n    });\n    return response.data;\n} catch (error) {\n    console.log(error)\n}\n}"],"names":["movieId","useParams","useState","movie","setMovie","status","setStatus","location","useLocation","backLink","useRef","state","from","console","log","useEffect","getMovieDetails","genres","overview","poster_path","title","vote_average","getDetails","to","current","src","alt","width","Math","ceil","map","id","name","API_KEY","BASE_URL","getTrending","axios","params","api_key","response","data","error","searchByName","query"],"sourceRoot":""}