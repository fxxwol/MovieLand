{"version":3,"file":"static/js/415.da29aff2.chunk.js","mappings":"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","sources":["pages/Home.jsx","service/movieAPI.js","styles/Common.styled.jsx","styles/Home.styled.jsx","styles/Movies.styled.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../service/movieAPI';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ImageListItem, ImageListItemBar, Pagination, Stack } from '@mui/material';\nimport { H1, ImageItem, MovieItem } from 'styles/Home.styled';\nimport { Wrap } from 'styles/Movies.styled';\nimport { BASE_IMG_URL } from '../service/movieAPI';\nimport { Loader } from 'components/Loader';\nimport { Section } from 'styles/Common.styled';\n\nconst Home = props => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('')\n  const [currPage, setCurrPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1)\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const data = await getTrending(currPage);\n        setMovies(data.results);\n        setTotalPages(data.total_pages / 2);\n        setStatus('resolved')\n      } catch (e) {\n        console.log(e);\n        setStatus('rejected')\n      }\n    }\n    getTrendingMovies();\n    setStatus('pending')\n  }, [currPage]);\n\n  const handlePagination = (_, page) => { setCurrPage(page); }\n    return (\n      <Section>\n        <H1 variant=\"h1\">Trending today</H1>\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && (\n          <>\n            <Wrap>\n              {movies.map(({ id, title, poster_path }) => (\n                <MovieItem\n                  component={Link}\n                  to={`movies/${id}`}\n                  state={{ from: location }}\n                  key={id}\n                  sx={{ padding: '0' }}\n                >\n                  <ImageListItem sx={{ width: '100%' }}>\n                    <ImageItem\n                      src={`${\n                        poster_path\n                          ? BASE_IMG_URL + poster_path\n                          : require('../img/default-poster.jpg')\n                      }`}\n                      alt={title}\n                      loading=\"lazy\"\n                    />\n                    <ImageListItemBar\n                      title={title}\n                      sx={{\n                        textAlign: 'center',\n                        background: 'rgba(0, 0, 0, 0.7)',\n                      }}\n                    />\n                  </ImageListItem>\n                </MovieItem>\n              ))}\n            </Wrap>\n            <Stack spacing={2} alignItems=\"center\">\n              <Pagination\n                count={totalPages}\n                shape=\"rounded\"\n                showFirstButton\n                showLastButton\n                page={currPage}\n                size=\"large\"\n                color=\"opacity\"\n                onChange={handlePagination}\n              />\n            </Stack>\n          </>\n        )}\n        {status === 'rejected' && <h1>Sorry, we don't have trending movies</h1>}\n      </Section>\n    );\n  \n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '', page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query,\n                page\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n    padding: 30px 0;\n`","import { ListItemButton } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const H1 = styled.h1`\n  font-weight: 400;\n  font-size: 60px;\n  margin-bottom: 30px;\n`;\n\nexport const MovieItem = styled(ListItemButton)`\n  width: calc((100% - 15px) / 4);\n  &.css-bn1567-MuiButtonBase-root-MuiListItemButton-root {\n    flex-grow: unset;\n    -webkit-flex-grow: unset;\n  }\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  display: block;\n  object-fit: cover;\n  flex-shrink: 0;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    margin: 30px 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    justify-content: center;\n    align-content: center;\n    height: fit-content;\n`\n"],"names":["props","useState","movies","setMovies","status","setStatus","currPage","setCurrPage","totalPages","setTotalPages","location","useLocation","useEffect","getTrending","data","results","total_pages","console","log","getTrendingMovies","H1","variant","map","id","title","poster_path","component","Link","to","state","from","sx","padding","width","src","BASE_IMG_URL","require","alt","loading","textAlign","background","spacing","alignItems","count","shape","showFirstButton","showLastButton","page","size","color","onChange","_","API_KEY","BASE_URL","axios","params","api_key","response","error","searchByName","query","getMovieDetails","getCredits","getReviews","Section","styled","MovieItem","ListItemButton","ImageItem","Wrap"],"sourceRoot":""}