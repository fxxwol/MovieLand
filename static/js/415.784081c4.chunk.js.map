{"version":3,"file":"static/js/415.784081c4.chunk.js","mappings":"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","sources":["pages/Home.jsx","service/movieAPI.js","styles/Common.styled.jsx","styles/Home.styled.jsx","styles/Movies.styled.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getTrending } from '../service/movieAPI';\nimport { Link, useLocation } from 'react-router-dom';\nimport { theme } from 'styles/Theme';\nimport {\n  ImageListItem,\n  ImageListItemBar,\n  Pagination,\n  Stack,\n  useMediaQuery,\n} from '@mui/material';\nimport { H1, ImageItem, MovieItem } from 'styles/Home.styled';\nimport { Wrap } from 'styles/Movies.styled';\nimport { BASE_IMG_URL } from '../service/movieAPI';\nimport { Loader } from 'components/Loader';\nimport { Section } from 'styles/Common.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Home = props => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('');\n  const [totalPages, setTotalPages] = useState(1);\n  const location = useLocation();\n  const page = searchParams.get('page') ?? 1;\n  const size = useMediaQuery(theme.breakpoints.down('lg')) ? 'small' : 'large';\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const data = await getTrending(page);\n        setMovies(data.results);\n        setTotalPages(data.total_pages / 2);\n        setStatus('resolved');\n      } catch (e) {\n        console.log(e);\n        setStatus('rejected');\n      }\n    }\n    getTrendingMovies();\n    setStatus('pending');\n  }, [page]);\n\n  const handlePagination = (_, page) => {\n    setSearchParams({ page });\n  };\n  return (\n    <Section>\n      <H1 variant=\"h1\">Trending today</H1>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <Wrap>\n            {movies.map(({ id, title, poster_path }) => (\n              <MovieItem\n                component={Link}\n                to={`movies/${id}`}\n                state={{ from: location }}\n                key={id}\n                sx={{ padding: '0' }}\n              >\n                <ImageListItem sx={{ width: '100%' }}>\n                  <ImageItem\n                    src={`${\n                      poster_path\n                        ? BASE_IMG_URL + poster_path\n                        : require('../img/default-poster.jpg')\n                    }`}\n                    alt={title}\n                    loading=\"lazy\"\n                  />\n                  <ImageListItemBar\n                    title={title}\n                    sx={{\n                      textAlign: 'center',\n                      background: 'rgba(0, 0, 0, 0.7)',\n                    }}\n                  />\n                </ImageListItem>\n              </MovieItem>\n            ))}\n          </Wrap>\n          <Stack spacing={2} alignItems=\"center\">\n            <Pagination\n              count={totalPages}\n              shape=\"rounded\"\n              showFirstButton\n              showLastButton\n              page={+page}\n              size={size}\n              color=\"opacity\"\n              onChange={handlePagination}\n            />\n          </Stack>\n        </>\n      )}\n      {status === 'rejected' && <h1>Sorry, we don't have trending movies</h1>}\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '', page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query,\n                page\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getVideo(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n`;\n","import { ListItemButton } from '@mui/material';\nimport styled from 'styled-components';\nimport { breakpoints } from './Theme';\n\nconst { _, mobileL, tablet, desktop } = breakpoints;\n\nexport const H1 = styled.h1`\n  font-weight: 400;\n  font-size: 30px;\n  margin-bottom: 30px;\n  text-align: center;\n  text-transform: uppercase;\n\n  @media ${tablet} {\n    font-size: 40px;\n    margin-bottom: 40px;\n  }\n\n  @media ${desktop} {\n    font-size: 50px;\n  }\n`;\n\nexport const MovieItem = styled(ListItemButton)`\n width: calc((100% - 8px));\n max-width: 264px;\n\n  &.css-bn1567-MuiButtonBase-root-MuiListItemButton-root {\n    flex-grow: unset;\n    -webkit-flex-grow: unset;\n    transition: all 250ms ease-in-out 0ms;\n  }\n\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n  }\n\n  @media ${mobileL} {\n    width: calc((100% - 16px) / 3);\n    max-width: 156px;\n  }\n  @media ${tablet} {\n    width: calc((100% - 24px) / 4);\n    max-width: 200px;\n  }\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  display: block;\n  object-fit: cover;\n  flex-shrink: 0;\n`;\n\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    margin: 30px 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    justify-content: center;\n    align-content: center;\n    height: fit-content;\n`\n"],"names":["props","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","status","setStatus","totalPages","setTotalPages","location","useLocation","page","get","size","useMediaQuery","theme","useEffect","getTrending","data","results","total_pages","console","log","getTrendingMovies","H1","variant","map","id","title","poster_path","component","Link","to","state","from","sx","padding","width","src","BASE_IMG_URL","require","alt","loading","textAlign","background","spacing","alignItems","count","shape","showFirstButton","showLastButton","color","onChange","_","API_KEY","BASE_URL","axios","params","api_key","response","error","searchByName","query","getMovieDetails","getCredits","getReviews","getVideo","Section","styled","mobileL","breakpoints","tablet","desktop","MovieItem","ListItemButton","ImageItem","Wrap"],"sourceRoot":""}