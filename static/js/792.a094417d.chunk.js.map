{"version":3,"file":"static/js/792.a094417d.chunk.js","mappings":"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","sources":["components/SearchBar.jsx","pages/Movies.jsx","service/movieAPI.js","styles/Movies.styled.jsx"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, OutlinedInput, Button } from '@mui/material';\n\nexport default function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleInput = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        sx={{\n          width: '500px',\n          height: '40px',\n          flexDirection: 'row',\n          gap: '10px',\n        }}\n      >\n        <OutlinedInput\n          placeholder=\"Please enter movie name\"\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          color=\"primary\"\n          onChange={handleInput}\n        />\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"medium\">\n          Search\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport SearchBar from 'components/SearchBar';\nimport { searchByName } from 'service/movieAPI';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport { Wrap } from 'styles/Movies.styled';\nimport { ListItemButton, ListItemText } from '@mui/material';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleSearch = searchQuery => {\n    if (!searchQuery.trim()) {\n      toast.error('Enter a query to search!');\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n  };\n\n  useEffect(() => {\n     if (!query) {\n       setMovies([]);\n       setStatus('')\n       return;\n     }\n    async function getByName() {\n      try {\n       \n        const data = await searchByName(query);\n        if (!data.total_results) {\n          throw new Error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n        setMovies(data.results);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    }\n    getByName();\n    setStatus('pending');\n    setError(null)\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSearch} />\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <Wrap>\n          {movies.map(({ id, title }) => (\n            <ListItemButton component={Link}\n          to={`${id}`}\n          state={{ from: location }}\n          key={id}\n          divider={true}\n          disableGutters={true}>\n              <ListItemText primary={title} />\n          </ListItemButton>\n          ))}\n        </Wrap>\n      )}\n      {status=== 'rejected' && <h1>{error.message}</h1>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '') {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n    margin: 30px 0;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    justify-content: center;\n    align-content: center;\n`"],"names":["SearchBar","onSubmit","useState","query","setQuery","e","preventDefault","FormControl","sx","width","height","flexDirection","gap","OutlinedInput","placeholder","type","name","value","autoComplete","autoFocus","color","onChange","target","toLowerCase","Button","variant","size","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","status","setStatus","get","location","useLocation","useEffect","searchByName","data","total_results","Error","results","getByName","searchQuery","trim","toast","Loader","map","id","title","ListItemButton","component","Link","to","state","from","divider","disableGutters","ListItemText","primary","message","API_KEY","BASE_URL","BASE_IMG_URL","getTrending","page","axios","params","api_key","response","console","log","getMovieDetails","getCredits","getReviews","Wrap","styled"],"sourceRoot":""}