{"version":3,"file":"static/js/466.79183ac1.chunk.js","mappings":"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","sources":["styles/Additional.styled.jsx","components/Additional.jsx","styles/Trailer.styled.jsx","components/Trailer.jsx","styles/MovieDetails.styled.jsx","styles/ImageSlider.styled.jsx","components/ImageSlider.jsx","pages/MovieDetails.jsx","service/movieAPI.js"],"sourcesContent":["import { Button } from '@mui/material';\nimport styled from 'styled-components';\nimport { breakpoints } from './Theme';\n\nexport const BtnList = styled.ul`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 10px;\n  height: fit-content;\n`;\n\nexport const AdditionalWrap = styled.div`\n  @media ${breakpoints.tablet} {\n    position: absolute;\n    left: 0;\n    bottom: -20px;\n    width: 48%;\n  }\n  @media ${breakpoints.desktop}{\n    position: static;\n    width: unset;\n  }\n`;\n\n\nexport const Info = styled(Button)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  line-height: 1.75px;\n  border: 1px solid black;\n\n  &.MuiButton-root:hover {\n    color: #02c342;\n    border: 1px solid #02c342;\n  }\n\n  &.active {\n    color: #02c342;\n    border: 1px solid #02c342;\n  }\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  margin: 20px 0;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { BtnList, BtnWrap, Info, AdditionalWrap } from 'styles/Additional.styled';\n\nconst Additional = props => {\n  const location = useLocation();\n  return (\n    <AdditionalWrap>\n      <h2>Additional info</h2>\n      <BtnWrap>\n        <BtnList>\n          <li>\n            <Info\n              component={Link}\n              to={`cast`}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={location.pathname.includes('cast') ? 'active' : ''}\n            >\n              Cast\n            </Info>\n          </li>\n          <li>\n            <Info\n              component={Link}\n              to={`reviews`}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={location.pathname.includes('reviews') ? 'active' : ''}\n            >\n              Reviews\n            </Info>\n          </li>\n        </BtnList>\n        {(location.pathname.includes('cast') ||\n          location.pathname.includes('reviews')) && (\n          <Info\n            component={Link}\n            to={``}\n            variant=\"outlined\"\n            color=\"secondary\"\n            className=\"hide\"\n          >\n            Hide\n          </Info>\n        )}\n      </BtnWrap>\n    </AdditionalWrap>\n  );\n};\n\nexport default Additional;\n","import styled from 'styled-components';\nimport { breakpoints } from './Theme';\n\nconst { _, mobileL, tablet } = breakpoints;\n\nexport const Player = styled.iframe`\n  width: 100%;\n  height: calc(100vw / 1.8);\n  max-width: 1200px;\n  max-height: 667px;\n  display: block;\n\n  @media ${mobileL} {\n  }\n\n  @media ${tablet} {\n    display: block;\n    margin: 30px auto;\n  }\n`;\n\nexport const VideoImg = styled.img`\n  width: 100%;\n  display: block;\n  margin: 30px auto;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getVideo } from 'service/movieAPI';\nimport { useParams } from 'react-router-dom';\nimport { Player, VideoImg } from 'styles/Trailer.styled';\n\nfunction Trailer() {\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('');\n  const [key, setKey] = useState('');\n\n  useEffect(() => {\n    async function getTrailer() {\n      try {\n        const data = await getVideo(movieId);\n        const res = data.results;\n        const trailer = res.find(\n          ({ official, type }) => official && type === 'Trailer'\n        );\n        setKey(trailer.key);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    getTrailer();\n    setStatus('pending');\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return (\n      <VideoImg\n        src={require('../img/Grey-Screen-of-Death.jpg')}\n        alt=\"default player\"\n      />\n    );\n  }\n\n  if (status === 'resolved') {\n    return (\n      <Player\n        src={'https://www.youtube.com/embed/' + key}\n        title=\"YouTube video player\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n        allowFullScreen\n        id='iframe'\n      ></Player>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <VideoImg\n        src={require('../img/video_error.png')}\n        alt=\"error loading\"\n      />\n    );\n  }\n}\n\nexport default Trailer;\n","import styled from 'styled-components';\nimport { breakpoints } from './Theme';\n\nconst { _, mobileL, tablet, desktop } = breakpoints;\n\nexport const Details = styled.div`\n  margin: 15px 0 30px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n\n  @media ${tablet} {\n    margin: 30px 0;\n    flex-direction: row;\n    gap: 20px;\n    justify-content: start;\n    align-items: start;\n  }\n  @media ${desktop} {\n    align-items: center;\n    gap: 40px;\n  }\n`;\n\nexport const Div = styled.div`\n  position: relative;\n`;\n\n\nexport const OverviewText = styled.p`\n  margin-top: 10px;\n`;\n\nexport const DetailsModal = styled.div`\n  background-color: #000000;\n  color: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: rgba(3, 232, 144, 0.25) 0px 54px 55px,\n    rgba(45, 212, 162, 0.668) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(5, 242, 49, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  gap: 35px;\n  width: calc(100% - 40px);\n  margin: 0 auto;\n\n  @media ${mobileL} {\n    width: 350px;\n  }\n\n  @media ${tablet} {\n    width: 260px;\n    gap: 20px;\n    max-width: unset;\n  }\n\n  @media ${desktop} {\n    width: 620px;\n    height: 500px;\n  }\n`;\nexport const DetailItem = styled.li`\n  display: flex;\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n  align-items: center;\n`;\n\nexport const P = styled.p`\n  width: 108px;\n  font-weight: 500;\n  line-height: 1.14;\n  font-size: 15px;\n\n  &.title {\n    color: #b7b7b7;\n    font-size: 17px;\n  }\n\n  @media ${desktop} {\n    font-size: 17px;\n    width: 124px;\n    &.title {\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const DetailsText = styled.ul`\n  margin-top: 20px;\n  width: 100%;\n  font-size: 17px;\n  font-weight: 500;\n  font-style: normal;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  max-width: 320px;\n\n  @media ${mobileL} {\n    max-width: 480px;\n  }\n\n  @media ${tablet} {\n    width: 300px;\n    max-width: unset;\n  }\n\n  @media ${desktop} {\n    width: 400px;\n  }\n`;\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 108px;\n\n  @media ${mobileL} {\n    width: 200px;\n  }\n\n  @media ${desktop} {\n    gap: 10px;\n    align-items: center;\n    width: 300px;\n  }\n`;\n\nexport const MovieTtitle = styled.h1`\n  font-size: 30px;\n  margin: 20px 0;\n`;\n","import styled from 'styled-components';\n\nexport const SliderImage = styled.img`\n  width: 100%;\n  border-radius: 8px;\n`;\n\nexport const SwiperWrap = styled.div`\n  width: 100%;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getImages } from 'service/movieAPI';\nimport { BASE_IMG_URL } from 'service/movieAPI';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Keyboard } from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/keyboard';\nimport { SliderImage, SwiperWrap } from 'styles/ImageSlider.styled';\n\nfunction ImageSlider() {\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieImages() {\n      try {\n        const data = await getImages(movieId);\n        setImages(data.backdrops);\n        setStatus('resolved');\n      } catch (e) {\n        console.log(e);\n        setStatus('rejected');\n      }\n    }\n    getMovieImages();\n    setStatus('pending');\n  }, [movieId]);\n  return (\n    <SwiperWrap>\n      <Swiper\n        modules={[Navigation, Keyboard]}\n        navigation={true}\n        keyboard={true}\n        speed={800}\n        threshold={3}\n        breakpoints={{\n          320: {\n            slidesPerView: 1,\n            spaceBetween: 10,\n            slidesPerGroup: 1,\n          },\n          780: {\n            slidesPerView: 1,\n            spaceBetween: 10,\n            slidesPerGroup: 1,\n          },\n\n          1200: {\n            slidesPerView: 2,\n            spaceBetween: 10,\n            slidesPerGroup: 2,\n          },\n        }}\n      >\n        {images.map(({ file_path }) => {\n          return (\n            <SwiperSlide key={file_path}>\n              <SliderImage src={BASE_IMG_URL + file_path} alt=\"slide\" />\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </SwiperWrap>\n  );\n}\n\nexport default ImageSlider;\n","import { Loader } from 'components/Loader';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { useLocation, useParams, Outlet, Link } from 'react-router-dom';\nimport Additional from 'components/Additional';\nimport { BASE_IMG_URL, getMovieDetails } from 'service/movieAPI';\nimport Trailer from 'components/Trailer';\nimport { Section } from 'styles/Common.styled';\nimport {\n  DetailItem,\n  DetailsModal,\n  DetailsText,\n  Div,\n  OverviewText,\n  P,\n  Table,\n  Tr,\n} from 'styles/MovieDetails.styled';\nimport {\n  Details,\n  Genres,\n  MovieImg,\n  MovieTtitle,\n} from 'styles/MovieDetails.styled';\nimport { Info } from 'styles/Additional.styled';\nimport ImageSlider from 'components/ImageSlider';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [status, setStatus] = useState('');\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const {\n          genres,\n          release_date,\n          runtime,\n          vote_count,\n          overview,\n          poster_path,\n          title,\n          vote_average,\n        } = await getMovieDetails(movieId);\n        setMovie({\n          genres,\n          release_date,\n          runtime,\n          vote_count,\n          overview,\n          poster_path,\n          title,\n          vote_average,\n        });\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    getDetails();\n    setStatus('pending');\n  }, [movieId]);\n\n  const releaseYear = new Date(movie.release_date).getFullYear();\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return (\n      <Section>\n        <Info\n          component={Link}\n          to={backLink.current}\n          color=\"secondary\"\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          Go Back\n        </Info>\n        <MovieTtitle>{movie.title}</MovieTtitle>\n        <Div>\n          <Details>\n            <div>\n              <MovieImg\n                src={BASE_IMG_URL + movie.poster_path}\n                alt={movie.title}\n              />\n            </div>\n            <DetailsModal>\n              <DetailsText>\n                <DetailItem>\n                  <P className=\"title\">Release Year: </P>\n                  <P>{releaseYear}</P>\n                </DetailItem>\n                <DetailItem>\n                  <P className=\"title\">Duration: </P>\n                  <P>{movie.runtime}</P>\n                </DetailItem>\n                <DetailItem>\n                  <P className=\"title\">Vote/Votes: </P>\n                  <P>\n                    {movie.vote_average}/{movie.vote_count}\n                  </P>\n                </DetailItem>\n                <DetailItem>\n                  <P className=\"title\">Genres: </P>\n                  \n                    {movie.genres.length !== 0 && (\n                      <Genres>\n                        {movie.genres.map(({ id, name }) => {\n                          return <p key={id}>{name}</p>;\n                        })}\n                      </Genres>\n                    )}\n                  \n                </DetailItem>\n              </DetailsText>\n             <div>\n                <P className=\"title\">About</P>\n                <OverviewText>{movie.overview}</OverviewText>\n             </div>\n              <ImageSlider />\n            </DetailsModal>\n          </Details>\n          <Additional />\n        </Div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n        <Trailer />\n      </Section>\n    );\n  }\n  if (status === 'rejected') {\n    return <h1>Sorry, we don't have this movie</h1>;\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nconst BASE_URL = 'https://api.themoviedb.org/3'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '', page = 1) {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query,\n                page\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getVideo(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/videos`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getImages(id) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/images`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}"],"names":["BtnList","styled","AdditionalWrap","breakpoints","Info","Button","BtnWrap","props","location","useLocation","component","Link","to","variant","color","className","pathname","includes","mobileL","tablet","Player","VideoImg","movieId","useParams","useState","status","setStatus","key","setKey","useEffect","getVideo","data","res","results","trailer","find","official","type","console","log","getTrailer","src","require","alt","title","allow","allowFullScreen","id","desktop","Details","Div","OverviewText","DetailsModal","DetailItem","P","DetailsText","MovieImg","Genres","MovieTtitle","SliderImage","SwiperWrap","images","setImages","getImages","backdrops","getMovieImages","modules","Navigation","Keyboard","navigation","keyboard","speed","threshold","slidesPerView","spaceBetween","slidesPerGroup","map","file_path","BASE_IMG_URL","movie","setMovie","backLink","useRef","state","from","getMovieDetails","genres","release_date","runtime","vote_count","overview","poster_path","vote_average","getDetails","releaseYear","Date","getFullYear","Loader","current","size","length","name","Suspense","fallback","API_KEY","BASE_URL","getTrending","page","axios","params","api_key","response","error","searchByName","query","getCredits","getReviews"],"sourceRoot":""}