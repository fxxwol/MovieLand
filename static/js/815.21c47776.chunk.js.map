{"version":3,"file":"static/js/815.21c47776.chunk.js","mappings":"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","sources":["styles/MovieCard.styled.jsx","components/MovieCard.jsx","components/MoviesList.jsx","components/ScrollTopBtn.jsx","components/Filter.jsx","styles/SearchBar.styled.jsx","components/SearchBar.jsx","pages/Movies.jsx","service/movieAPI.js","styles/Movies.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { breakpoints } from './Theme';\nimport { ListItemButton, Skeleton } from '@mui/material';\n\nconst { _, mobileL, tablet, desktop } = breakpoints;\nexport const MovieItem = styled(ListItemButton)`\n  width: calc((100% - 8px));\n  max-width: 264px;\n\n  &.MuiListItemButton-root {\n    flex-grow: unset;\n    -webkit-flex-grow: unset;\n    transition: all 250ms ease-in-out 0ms;\n  }\n\n  &:hover,\n  :focus {\n    transform: scale(1.02);\n  }\n\n  @media ${mobileL} {\n    width: calc((100% - 16px) / 3);\n    max-width: 156px;\n  }\n  @media ${tablet} {\n    width: calc((100% - 24px) / 4);\n    max-width: 200px;\n  }\n`;\n\nexport const ImageItem = styled.img`\n  width: 100%;\n  height: 400px;\n  display: block;\n  object-fit: cover;\n  flex-shrink: 0;\n\n  @media ${mobileL} {\n    height: 220px;\n  }\n\n  @media ${tablet} {\n    height: 280px;\n  }\n  @media ${desktop} {\n    height: 300px;\n  }\n`;\n\nexport const SkeletonLoader = styled(Skeleton)`\n  &.MuiSkeleton-root {\n    width: 100%;\n    height: 400px;\n\n    @media ${mobileL} {\n      height: 220px;\n    }\n\n    @media ${tablet} {\n      height: 280px;\n    }\n    @media ${desktop} {\n      height: 300px;\n    }\n  }\n`;\n","import { ImageListItem, ImageListItemBar } from '@mui/material';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'service/movieAPI';\nimport { ImageItem, MovieItem, SkeletonLoader } from 'styles/MovieCard.styled';\n\nfunction MovieCard({ id, poster_path, title, path }) {\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n\n  return (\n    <MovieItem\n      component={Link}\n      to={path(id)}\n      state={{ from: location }}\n      key={id}\n      sx={{ padding: '0', '&.MuiListItemButton-root': { display: 'block' } }}\n    >\n      {isLoading && <SkeletonLoader variant=\"rectangular\" animation=\"wave\" />}\n\n      <ImageListItem\n        sx={{\n          width: '100%',\n          position: 'unset',\n          ...(isLoading && {\n            position: 'absolute',\n            width: '0px',\n            height: '0px',\n            margin: ' -1px',\n            border: 0,\n            padding: 0,\n            overflow: 'hidden',\n          }),\n        }}\n      >\n        <ImageItem\n          src={`${\n            poster_path\n              ? BASE_IMG_URL + poster_path\n              : require('../img/default-poster.jpg')\n          }`}\n          alt={title}\n          loading=\"lazy\"\n          onLoad={() => {\n            setIsLoading(false);\n          }}\n        />\n        <ImageListItemBar\n          title={title}\n          sx={{\n            textAlign: 'center',\n            background: 'rgba(0, 0, 0, 0.7)',\n          }}\n        />\n      </ImageListItem>\n    </MovieItem>\n  );\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport { Wrap } from 'styles/Movies.styled';\nimport MovieCard from './MovieCard';\n\nfunction MoviesList({ movies, filtered = [], path, wasFiltered, isFiltering }) {\n  return (\n    <>\n      <Wrap>\n        {(() => {\n          if (wasFiltered && !isFiltering) {\n            if (filtered.length) {\n              return filtered.map(({ id, title, poster_path }) => (\n                <MovieCard\n                  id={id}\n                  title={title}\n                  poster_path={poster_path}\n                  key={id}\n                  path={path}\n                />\n              ));\n            } else {\n              return <h1>There is no movie with this genre</h1>;\n            }\n          } else {\n            return movies.map(({ id, title, poster_path }) => (\n              <MovieCard\n                id={id}\n                title={title}\n                poster_path={poster_path}\n                key={id}\n                path={path}\n              />\n            ));\n          }\n        })()}\n      </Wrap>\n    </>\n  );\n}\n\nexport default MoviesList;\n","import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Box, Fab, Zoom, useScrollTrigger } from '@mui/material';\nimport { useCallback } from 'react';\n\n\nfunction ScrollToTopFab() {\n  const trigger = useScrollTrigger({\n    threshold: 400,\n  });\n\n  const scrollToTop = useCallback(() => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, []);\n\n  return (\n    <Zoom in={trigger}>\n      <Box\n        role=\"presentation\"\n        sx={{\n          position: 'fixed',\n          bottom: 32,\n          right: 32,\n          zIndex: 1,\n        }}\n      >\n        <Fab\n          onClick={scrollToTop}\n          color=\"primary\"\n          size=\"small\"\n          aria-label=\"Scroll back to top\"\n          sx={{\n            borderRadius: '6px',\n            background: '#08b508da',\n\n            width: '40px',\n            height: '35px',\n\n            '&:hover > .MuiSvgIcon-root': {\n              color: '#fffefed2',\n            },\n          }}\n        >\n          <KeyboardArrowUpIcon\n            fontSize=\"large\"\n            sx={{\n              color: '#161616d3',\n              trasition: '225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n            }}\n          />\n        </Fab>\n      </Box>\n    </Zoom>\n  );\n}\nexport default ScrollToTopFab;\n","import { useEffect, useState } from 'react';\nimport { getGenres } from 'service/movieAPI';\n\nfunction Filter({ onChange }) {\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(null);\n\n  useEffect(() => {\n    const getAllGenres = async () => {\n      const data = await getGenres();\n      setGenres(data.genres);\n    };\n    getAllGenres();\n  }, []);\n\n  const handleGenreChange = value => {\n    setSelectedGenre(value);\n    onChange(value);\n  };\n\n  return (\n    <>\n      <select\n        onChange={e => handleGenreChange(e.target.value)}\n        value={selectedGenre || ''}\n      >\n        {selectedGenre === null && (\n          <option value=\"\" disabled hidden>\n            Genre\n          </option>\n        )}\n        {genres.map(({ id, name }) => (\n          <option value={id} key={id}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n\nexport default Filter;\n","import { OutlinedInput } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const SearchInput = styled(OutlinedInput)`\n  width: 90%;\n  height: 100%;\n  &.MuiOutlinedInput-root {\n    border-color: #000;\n    border-width: 2px;\n    transition: border-color 0.3s;\n  }\n\n  &&:hover .MuiOutlinedInput-notchedOutline {\n    border-color: #02c342;\n  }\n\n  &&.Mui-focused .MuiOutlinedInput-notchedOutline {\n    border-color: #02c342;\n    border-width: 1px;\n  }\n`;\n","import { Button, FormControl } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { SearchInput } from 'styles/SearchBar.styled';\nimport { breakpoints } from 'styles/Theme';\n\nexport default function SearchBar({ onSubmit, onChange, handleFilter, isTyping }) {\n  const [query, setQuery] = useState('');\n  const { _, mobileL, tablet, desktop } = breakpoints;\n\n  const handleInput = e => {\n    setQuery(e.target.value.toLowerCase());\n    handleFilter()\n    isTyping(true)\n    onChange([]);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    isTyping(false)\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl\n        sx={{\n          width: '90%',\n          display: 'flex',\n          margin: '0 auto',\n          height: '40px',\n          flexDirection: 'row',\n          gap: '10px',\n          justifyContent: 'center',\n          alignItems: 'center',\n          [`@media ${tablet}`]: {\n            width: '80%',\n          },\n          [`@media ${desktop}`]: {\n            width: '50%',\n          },\n        }}\n      >\n        <SearchInput\n          placeholder=\"Please enter movie name\"\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          color=\"primary\"\n          onChange={handleInput}\n        />\n        <Button type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"medium\">\n          Search\n        </Button>\n      </FormControl>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Pagination, Stack, useMediaQuery } from '@mui/material';\nimport Filter from 'components/Filter';\nimport { Loader } from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\nimport ScrollToTopFab from 'components/ScrollTopBtn';\nimport SearchBar from 'components/SearchBar';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { searchByName } from 'service/movieAPI';\nimport { Section } from 'styles/Common.styled';\nimport { theme } from 'styles/Theme';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [movies, setMovies] = useState([]);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [wasFiltered, setWasFiltered] = useState(false);\n  const [isFiltering, setIsFiltering] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const page = searchParams.get('page') ?? 1;\n  const genreId = searchParams.get('genreId') ?? '';\n  const size = useMediaQuery(theme.breakpoints.down('lg')) ? 'small' : 'large';\n\n  const handleSearch = newSearchQuery => {\n    if (!newSearchQuery.trim()) {\n      toast.error('Enter a query to search!');\n      setSearchQuery('');\n      setSearchParams({});\n      setWasFiltered(false);\n      setFilteredMovies([]);\n    } else {\n      setSearchQuery(newSearchQuery);\n      setWasFiltered(false);\n      setSearchParams({ query: newSearchQuery, page: 1 });\n    }\n  };\n\n  const handleFilterChange = genre => {\n    if (!genre) {\n      setWasFiltered(false);\n      return;\n    }\n    setIsFiltering(true);\n    if (movies.length) {\n      setWasFiltered(true);\n      setSearchParams({ query: searchQuery, page: 1, genreId: genre });\n      setFilteredMovies(\n        movies.filter(({ genre_ids }) => genre_ids.includes(+genre))\n      );\n      setTotalPages(Math.ceil(filteredMovies.length / 20));\n    }\n  };\n\n  useEffect(() => {\n    async function getByName() {\n      try {\n        const data = await searchByName(searchQuery, page);\n        if (!data.total_results) {\n          throw new Error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n        setMovies(data.results);\n        setTotalPages(data.total_pages);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    }\n\n    if (searchQuery) {\n      getByName();\n      setStatus('pending');\n      setError(null);\n    }\n  }, [searchQuery, page]);\n\n  useEffect(() => {\n    if (genreId) {\n      setFilteredMovies(\n        movies.filter(({ genre_ids }) => genre_ids.includes(+genreId))\n      );\n    }\n  }, [genreId, movies]);\n\n  useEffect(() => {\n    setIsFiltering(false);\n    if (filteredMovies.length) {\n      setTotalPages(Math.ceil(filteredMovies.length / 20));\n    }\n  }, [filteredMovies]);\n\n  const handlePagination = (_, page) => {\n    setSearchParams({ query: searchQuery, page });\n  };\n\n  const genereatePath = id => `${id}`;\n\n  return (\n    <Section>\n      <SearchBar onSubmit={handleSearch} onChange={setMovies} handleFilter={handleFilterChange} isTyping={setIsTyping} />\n      {status && status === 'resolved' && !isTyping && (\n        <Filter onChange={handleFilterChange} />\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <MoviesList\n            movies={movies}\n            filtered={filteredMovies}\n            path={genereatePath}\n            wasFiltered={wasFiltered}\n            isFiltering={isFiltering}\n          />\n          {(!wasFiltered && movies.length) || filteredMovies.length ? (\n            <Stack spacing={2} alignItems=\"center\">\n              <Pagination\n                count={totalPages}\n                shape=\"rounded\"\n                showFirstButton\n                showLastButton\n                page={+page}\n                size={size}\n                color=\"opacity\"\n                onChange={handlePagination}\n              />\n            </Stack>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n      {status === 'rejected' && <h1>{error.message}</h1>}\n      <ScrollToTopFab />\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = 'f5c750e62498ce7d84b29e02e1f941bc'\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending(page = 1) {\n    try {\n        const response = await axios.get(`/trending/movie/day`, {\n            params: {\n                api_key: `${API_KEY}`,\n                page\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport async function searchByName(query = '', page = 1) {\n    try {\n        const response = await axios.get(`/search/movie`, {\n            params: {\n                api_key: `${API_KEY}`,\n                query,\n                page\n            }\n        });\n        return response.data;\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nexport async function getMovieDetails(id) {\n    try {\n        const response = await axios.get(`/movie/${id}`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getCredits(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/credits`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getReviews(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/reviews`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getVideo(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/videos`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getImages(id) {\n    try {\n        const response = await axios.get(`/movie/${id}/images`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport async function getGenres(id) {\n    try {\n        const response = await axios.get(`/genre/movie/list`, {\n            params: {\n                api_key: `${API_KEY}`,\n            }\n        });\n        return response.data;\n    } catch (error) {\n        console.log(error)\n    }\n}","import styled from 'styled-components';\nimport { breakpoints } from './Theme';\n\nconst { _, mobileL, tablet, desktop } = breakpoints;\n\nexport const Wrap = styled.div`\n  margin: 30px 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  justify-content: center;\n  align-content: center;\n`;\n\nexport const MoviesWrap = styled.div`\n  height: 8180px;\n\n  @media ${mobileL} {\n    height: 1620px;\n  }\n  @media ${tablet} {\n    height: 1470px;\n  }\n\n  @media ${desktop} {\n    height: 1270px;\n  }\n`;\n"],"names":["mobileL","breakpoints","tablet","desktop","MovieItem","styled","ListItemButton","ImageItem","SkeletonLoader","Skeleton","id","poster_path","title","path","location","useLocation","useState","isLoading","setIsLoading","component","Link","to","state","from","sx","padding","display","variant","animation","ImageListItem","width","position","height","margin","border","overflow","src","BASE_IMG_URL","require","alt","loading","onLoad","ImageListItemBar","textAlign","background","movies","filtered","wasFiltered","isFiltering","length","map","trigger","useScrollTrigger","threshold","scrollToTop","useCallback","window","scrollTo","top","behavior","Z","in","role","bottom","right","zIndex","onClick","color","size","borderRadius","fontSize","trasition","onChange","genres","setGenres","selectedGenre","setSelectedGenre","useEffect","getAllGenres","getGenres","data","handleGenreChange","value","e","target","disabled","hidden","name","SearchInput","OutlinedInput","SearchBar","onSubmit","handleFilter","isTyping","query","setQuery","preventDefault","FormControl","flexDirection","gap","justifyContent","alignItems","placeholder","type","autoComplete","autoFocus","toLowerCase","Button","useSearchParams","searchParams","setSearchParams","setMovies","filteredMovies","setFilteredMovies","error","setError","status","setStatus","setIsTyping","totalPages","setTotalPages","setWasFiltered","setIsFiltering","searchQuery","setSearchQuery","page","get","genreId","useMediaQuery","theme","handleFilterChange","genre","filter","genre_ids","includes","Math","ceil","searchByName","total_results","Error","results","total_pages","getByName","newSearchQuery","trim","toast","Loader","MoviesList","Stack","spacing","Pagination","count","shape","showFirstButton","showLastButton","_","message","API_KEY","getTrending","axios","params","api_key","response","console","log","getMovieDetails","getCredits","getReviews","getVideo","getImages","Wrap","MoviesWrap"],"sourceRoot":""}